// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.

public class Packet_ClientIdentification
{
    
    #if !CITO
     internal
    #endif
     string MdProtocolVersion;
    public string GetMdProtocolVersion() { return MdProtocolVersion; } 
    public void SetMdProtocolVersion(string value) { MdProtocolVersion = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Username;
    public string GetUsername() { return Username; } 
    public void SetUsername(string value) { Username = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string VerificationKey;
    public string GetVerificationKey() { return VerificationKey; } 
    public void SetVerificationKey(string value) { VerificationKey = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string ServerPassword;
    public string GetServerPassword() { return ServerPassword; } 
    public void SetServerPassword(string value) { ServerPassword = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_PositionAndOrientation RequestPosition;
    public Packet_PositionAndOrientation GetRequestPosition() { return RequestPosition; } 
    public void SetRequestPosition(Packet_PositionAndOrientation value) { RequestPosition = value; } 
    
    
}

public class Packet_ClientRequestBlob
{
    
    #if !CITO
     internal
    #endif
     Packet_StringList RequestedMd5;
    public Packet_StringList GetRequestedMd5() { return RequestedMd5; } 
    public void SetRequestedMd5(Packet_StringList value) { RequestedMd5 = value; } 
    
    
}

public class Packet_ClientSetBlock
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Mode;
    public int GetMode() { return Mode; } 
    public void SetMode(int value) { Mode = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockType;
    public int GetBlockType() { return BlockType; } 
    public void SetBlockType(int value) { BlockType = value; } 
    
    
    /// <summary> obsolete</summary>
    
    #if !CITO
     internal
    #endif
     int MaterialSlot;
    public int GetMaterialSlot() { return MaterialSlot; } 
    public void SetMaterialSlot(int value) { MaterialSlot = value; } 
    
    
}

public class Packet_ClientFillArea
{
    
    #if !CITO
     internal
    #endif
     int X1;
    public int GetX1() { return X1; } 
    public void SetX1(int value) { X1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X2;
    public int GetX2() { return X2; } 
    public void SetX2(int value) { X2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y1;
    public int GetY1() { return Y1; } 
    public void SetY1(int value) { Y1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y2;
    public int GetY2() { return Y2; } 
    public void SetY2(int value) { Y2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z1;
    public int GetZ1() { return Z1; } 
    public void SetZ1(int value) { Z1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z2;
    public int GetZ2() { return Z2; } 
    public void SetZ2(int value) { Z2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockType;
    public int GetBlockType() { return BlockType; } 
    public void SetBlockType(int value) { BlockType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MaterialSlot;
    public int GetMaterialSlot() { return MaterialSlot; } 
    public void SetMaterialSlot(int value) { MaterialSlot = value; } 
    
    
}

public class Packet_ClientPositionAndOrientation
{
    
    #if !CITO
     internal
    #endif
     int PlayerId;
    public int GetPlayerId() { return PlayerId; } 
    public void SetPlayerId(int value) { PlayerId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Heading;
    public int GetHeading() { return Heading; } 
    public void SetHeading(int value) { Heading = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Pitch;
    public int GetPitch() { return Pitch; } 
    public void SetPitch(int value) { Pitch = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Stance;
    public int GetStance() { return Stance; } 
    public void SetStance(int value) { Stance = value; } 
    
    
}

public class Packet_ClientMessage
{
    
    #if !CITO
     internal
    #endif
     string Message;
    public string GetMessage() { return Message; } 
    public void SetMessage(string value) { Message = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IsTeamchat;
    public int GetIsTeamchat() { return IsTeamchat; } 
    public void SetIsTeamchat(int value) { IsTeamchat = value; } 
    
    
}

public class Packet_ClientInventoryAction
{
    
    #if !CITO
     internal
    #endif
     int Action;
    public int GetAction() { return Action; } 
    public void SetAction(int value) { Action = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_InventoryPosition A;
    public Packet_InventoryPosition GetA() { return A; } 
    public void SetA(Packet_InventoryPosition value) { A = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_InventoryPosition B;
    public Packet_InventoryPosition GetB() { return B; } 
    public void SetB(Packet_InventoryPosition value) { B = value; } 
    
    
}

public class Packet_InventoryPosition
{
    
    #if !CITO
     internal
    #endif
     int Type;
    public int GetType() { return Type; } 
    public void SetType(int value) { Type = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AreaX;
    public int GetAreaX() { return AreaX; } 
    public void SetAreaX(int value) { AreaX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AreaY;
    public int GetAreaY() { return AreaY; } 
    public void SetAreaY(int value) { AreaY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MaterialId;
    public int GetMaterialId() { return MaterialId; } 
    public void SetMaterialId(int value) { MaterialId = value; } 
    
    
    /// <summary>WearPlace</summary>
    
    #if !CITO
     internal
    #endif
     int WearPlace;
    public int GetWearPlace() { return WearPlace; } 
    public void SetWearPlace(int value) { WearPlace = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ActiveMaterial;
    public int GetActiveMaterial() { return ActiveMaterial; } 
    public void SetActiveMaterial(int value) { ActiveMaterial = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int GroundPositionX;
    public int GetGroundPositionX() { return GroundPositionX; } 
    public void SetGroundPositionX(int value) { GroundPositionX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int GroundPositionY;
    public int GetGroundPositionY() { return GroundPositionY; } 
    public void SetGroundPositionY(int value) { GroundPositionY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int GroundPositionZ;
    public int GetGroundPositionZ() { return GroundPositionZ; } 
    public void SetGroundPositionZ(int value) { GroundPositionZ = value; } 
    
    
}

public class Packet_PositionAndOrientation
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Heading;
    public int GetHeading() { return Heading; } 
    public void SetHeading(int value) { Heading = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Pitch;
    public int GetPitch() { return Pitch; } 
    public void SetPitch(int value) { Pitch = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Stance;
    public int GetStance() { return Stance; } 
    public void SetStance(int value) { Stance = value; } 
    
    
}

public class Packet_ClientReload
{
}

public class Packet_ClientLeave
{
    
    #if !CITO
     internal
    #endif
     int Reason;
    public int GetReason() { return Reason; } 
    public void SetReason(int value) { Reason = value; } 
    
    
}

/// <summary>
/// <para>Temporary, for client-side health.</para>
/// <para>Todo fix because it allows cheating.</para>
/// </summary>
public class Packet_ClientHealth
{
    
    #if !CITO
     internal
    #endif
     int CurrentHealth;
    public int GetCurrentHealth() { return CurrentHealth; } 
    public void SetCurrentHealth(int value) { CurrentHealth = value; } 
    
    
}

public class Packet_ClientOxygen
{
    
    #if !CITO
     internal
    #endif
     int CurrentOxygen;
    public int GetCurrentOxygen() { return CurrentOxygen; } 
    public void SetCurrentOxygen(int value) { CurrentOxygen = value; } 
    
    
}

public class Packet_ClientDialogClick
{
    
    #if !CITO
     internal
    #endif
     string WidgetId;
    public string GetWidgetId() { return WidgetId; } 
    public void SetWidgetId(string value) { WidgetId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string[] TextBoxValue;
    public string[] GetTextBoxValue() { return TextBoxValue; } 
    public void SetTextBoxValue(string[] value, int count, int length) { TextBoxValue = value; TextBoxValueCount = count; TextBoxValueLength = length; } 
    
    #if !CITO
     internal
    #endif
     int TextBoxValueCount;
    public int GetTextBoxValueCount() { return TextBoxValueCount; } 
    
    #if !CITO
     internal
    #endif
     int TextBoxValueLength;
    public int GetTextBoxValueLength() { return TextBoxValueLength; } 
    public void TextBoxValueAdd(string value){if(TextBoxValueCount >= TextBoxValueLength)
    {
    string[] TextBoxValue2 = new string[TextBoxValueLength*2];
    TextBoxValueLength = TextBoxValueLength*2;
    for(int i=0;i<TextBoxValueCount;i++)
    {
    TextBoxValue2[i] = TextBoxValue[i];
    }
    TextBoxValue=TextBoxValue2;
    }
    TextBoxValue[TextBoxValueCount] = value;
    TextBoxValueCount++;
    }
    
    
}

public class Packet_ClientPingReply
{
}

public class Packet_ClientCraft
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int RecipeId;
    public int GetRecipeId() { return RecipeId; } 
    public void SetRecipeId(int value) { RecipeId = value; } 
    
    
}

public class Packet_ClientShot
{
    
    #if !CITO
     internal
    #endif
     int FromX;
    public int GetFromX() { return FromX; } 
    public void SetFromX(int value) { FromX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromY;
    public int GetFromY() { return FromY; } 
    public void SetFromY(int value) { FromY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromZ;
    public int GetFromZ() { return FromZ; } 
    public void SetFromZ(int value) { FromZ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToX;
    public int GetToX() { return ToX; } 
    public void SetToX(int value) { ToX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToY;
    public int GetToY() { return ToY; } 
    public void SetToY(int value) { ToY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToZ;
    public int GetToZ() { return ToZ; } 
    public void SetToZ(int value) { ToZ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int WeaponBlock;
    public int GetWeaponBlock() { return WeaponBlock; } 
    public void SetWeaponBlock(int value) { WeaponBlock = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int HitPlayer;
    public int GetHitPlayer() { return HitPlayer; } 
    public void SetHitPlayer(int value) { HitPlayer = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IsHitHead;
    public int GetIsHitHead() { return IsHitHead; } 
    public void SetIsHitHead(int value) { IsHitHead = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ExplodesAfter;
    public int GetExplodesAfter() { return ExplodesAfter; } 
    public void SetExplodesAfter(int value) { ExplodesAfter = value; } 
    
    
}

public class Packet_ClientSpecialKey
{
    
    #if !CITO
     internal
    #endif
     int Key_;
    public int GetKey_() { return Key_; } 
    public void SetKey_(int value) { Key_ = value; } 
    
    
}

public class Packet_ClientActiveMaterialSlot
{
    
    #if !CITO
     internal
    #endif
     int ActiveMaterialSlot;
    public int GetActiveMaterialSlot() { return ActiveMaterialSlot; } 
    public void SetActiveMaterialSlot(int value) { ActiveMaterialSlot = value; } 
    
    
}

public class Packet_ClientDeath
{
    
    #if !CITO
     internal
    #endif
     int Reason;
    public int GetReason() { return Reason; } 
    public void SetReason(int value) { Reason = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SourcePlayer;
    public int GetSourcePlayer() { return SourcePlayer; } 
    public void SetSourcePlayer(int value) { SourcePlayer = value; } 
    
    
}

public class Packet_ClientServerQuery
{
}

public class Packet_ClientGameResolution
{
    
    #if !CITO
     internal
    #endif
     int Width;
    public int GetWidth() { return Width; } 
    public void SetWidth(int value) { Width = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Height;
    public int GetHeight() { return Height; } 
    public void SetHeight(int value) { Height = value; } 
    
    
}

public class Packet_Client
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientIdentification Identification;
    public Packet_ClientIdentification GetIdentification() { return Identification; } 
    public void SetIdentification(Packet_ClientIdentification value) { Identification = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientSetBlock SetBlock;
    public Packet_ClientSetBlock GetSetBlock() { return SetBlock; } 
    public void SetSetBlock(Packet_ClientSetBlock value) { SetBlock = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientFillArea FillArea;
    public Packet_ClientFillArea GetFillArea() { return FillArea; } 
    public void SetFillArea(Packet_ClientFillArea value) { FillArea = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientPositionAndOrientation PositionAndOrientation;
    public Packet_ClientPositionAndOrientation GetPositionAndOrientation() { return PositionAndOrientation; } 
    public void SetPositionAndOrientation(Packet_ClientPositionAndOrientation value) { PositionAndOrientation = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientMessage Message;
    public Packet_ClientMessage GetMessage() { return Message; } 
    public void SetMessage(Packet_ClientMessage value) { Message = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientCraft Craft;
    public Packet_ClientCraft GetCraft() { return Craft; } 
    public void SetCraft(Packet_ClientCraft value) { Craft = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientRequestBlob RequestBlob;
    public Packet_ClientRequestBlob GetRequestBlob() { return RequestBlob; } 
    public void SetRequestBlob(Packet_ClientRequestBlob value) { RequestBlob = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientInventoryAction InventoryAction;
    public Packet_ClientInventoryAction GetInventoryAction() { return InventoryAction; } 
    public void SetInventoryAction(Packet_ClientInventoryAction value) { InventoryAction = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientHealth Health;
    public Packet_ClientHealth GetHealth() { return Health; } 
    public void SetHealth(Packet_ClientHealth value) { Health = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientPingReply PingReply;
    public Packet_ClientPingReply GetPingReply() { return PingReply; } 
    public void SetPingReply(Packet_ClientPingReply value) { PingReply = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientDialogClick DialogClick_;
    public Packet_ClientDialogClick GetDialogClick_() { return DialogClick_; } 
    public void SetDialogClick_(Packet_ClientDialogClick value) { DialogClick_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientShot Shot;
    public Packet_ClientShot GetShot() { return Shot; } 
    public void SetShot(Packet_ClientShot value) { Shot = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientSpecialKey SpecialKey_;
    public Packet_ClientSpecialKey GetSpecialKey_() { return SpecialKey_; } 
    public void SetSpecialKey_(Packet_ClientSpecialKey value) { SpecialKey_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientActiveMaterialSlot ActiveMaterialSlot;
    public Packet_ClientActiveMaterialSlot GetActiveMaterialSlot() { return ActiveMaterialSlot; } 
    public void SetActiveMaterialSlot(Packet_ClientActiveMaterialSlot value) { ActiveMaterialSlot = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientLeave Leave;
    public Packet_ClientLeave GetLeave() { return Leave; } 
    public void SetLeave(Packet_ClientLeave value) { Leave = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientReload Reload;
    public Packet_ClientReload GetReload() { return Reload; } 
    public void SetReload(Packet_ClientReload value) { Reload = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientOxygen Oxygen;
    public Packet_ClientOxygen GetOxygen() { return Oxygen; } 
    public void SetOxygen(Packet_ClientOxygen value) { Oxygen = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientDeath Death;
    public Packet_ClientDeath GetDeath() { return Death; } 
    public void SetDeath(Packet_ClientDeath value) { Death = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientServerQuery Query;
    public Packet_ClientServerQuery GetQuery() { return Query; } 
    public void SetQuery(Packet_ClientServerQuery value) { Query = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientGameResolution GameResolution;
    public Packet_ClientGameResolution GetGameResolution() { return GameResolution; } 
    public void SetGameResolution(Packet_ClientGameResolution value) { GameResolution = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ClientEntityInteraction EntityInteraction;
    public Packet_ClientEntityInteraction GetEntityInteraction() { return EntityInteraction; } 
    public void SetEntityInteraction(Packet_ClientEntityInteraction value) { EntityInteraction = value; } 
    
    
}

public class Packet_ClientEntityInteraction
{
    
    #if !CITO
     internal
    #endif
     int EntityId;
    public int GetEntityId() { return EntityId; } 
    public void SetEntityId(int value) { EntityId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int InteractionType;
    public int GetInteractionType() { return InteractionType; } 
    public void SetInteractionType(int value) { InteractionType = value; } 
    
    
}

public class Packet_SoundSet
{
    
    #if !CITO
     internal
    #endif
     string[] Walk;
    public string[] GetWalk() { return Walk; } 
    public void SetWalk(string[] value, int count, int length) { Walk = value; WalkCount = count; WalkLength = length; } 
    
    #if !CITO
     internal
    #endif
     int WalkCount;
    public int GetWalkCount() { return WalkCount; } 
    
    #if !CITO
     internal
    #endif
     int WalkLength;
    public int GetWalkLength() { return WalkLength; } 
    public void WalkAdd(string value){if(WalkCount >= WalkLength)
    {
    string[] Walk2 = new string[WalkLength*2];
    WalkLength = WalkLength*2;
    for(int i=0;i<WalkCount;i++)
    {
    Walk2[i] = Walk[i];
    }
    Walk=Walk2;
    }
    Walk[WalkCount] = value;
    WalkCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] Break1;
    public string[] GetBreak1() { return Break1; } 
    public void SetBreak1(string[] value, int count, int length) { Break1 = value; Break1Count = count; Break1Length = length; } 
    
    #if !CITO
     internal
    #endif
     int Break1Count;
    public int GetBreak1Count() { return Break1Count; } 
    
    #if !CITO
     internal
    #endif
     int Break1Length;
    public int GetBreak1Length() { return Break1Length; } 
    public void Break1Add(string value){if(Break1Count >= Break1Length)
    {
    string[] Break12 = new string[Break1Length*2];
    Break1Length = Break1Length*2;
    for(int i=0;i<Break1Count;i++)
    {
    Break12[i] = Break1[i];
    }
    Break1=Break12;
    }
    Break1[Break1Count] = value;
    Break1Count++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] Build;
    public string[] GetBuild() { return Build; } 
    public void SetBuild(string[] value, int count, int length) { Build = value; BuildCount = count; BuildLength = length; } 
    
    #if !CITO
     internal
    #endif
     int BuildCount;
    public int GetBuildCount() { return BuildCount; } 
    
    #if !CITO
     internal
    #endif
     int BuildLength;
    public int GetBuildLength() { return BuildLength; } 
    public void BuildAdd(string value){if(BuildCount >= BuildLength)
    {
    string[] Build2 = new string[BuildLength*2];
    BuildLength = BuildLength*2;
    for(int i=0;i<BuildCount;i++)
    {
    Build2[i] = Build[i];
    }
    Build=Build2;
    }
    Build[BuildCount] = value;
    BuildCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] Clone;
    public string[] GetClone() { return Clone; } 
    public void SetClone(string[] value, int count, int length) { Clone = value; CloneCount = count; CloneLength = length; } 
    
    #if !CITO
     internal
    #endif
     int CloneCount;
    public int GetCloneCount() { return CloneCount; } 
    
    #if !CITO
     internal
    #endif
     int CloneLength;
    public int GetCloneLength() { return CloneLength; } 
    public void CloneAdd(string value){if(CloneCount >= CloneLength)
    {
    string[] Clone2 = new string[CloneLength*2];
    CloneLength = CloneLength*2;
    for(int i=0;i<CloneCount;i++)
    {
    Clone2[i] = Clone[i];
    }
    Clone=Clone2;
    }
    Clone[CloneCount] = value;
    CloneCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] Shoot;
    public string[] GetShoot() { return Shoot; } 
    public void SetShoot(string[] value, int count, int length) { Shoot = value; ShootCount = count; ShootLength = length; } 
    
    #if !CITO
     internal
    #endif
     int ShootCount;
    public int GetShootCount() { return ShootCount; } 
    
    #if !CITO
     internal
    #endif
     int ShootLength;
    public int GetShootLength() { return ShootLength; } 
    public void ShootAdd(string value){if(ShootCount >= ShootLength)
    {
    string[] Shoot2 = new string[ShootLength*2];
    ShootLength = ShootLength*2;
    for(int i=0;i<ShootCount;i++)
    {
    Shoot2[i] = Shoot[i];
    }
    Shoot=Shoot2;
    }
    Shoot[ShootCount] = value;
    ShootCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] ShootEnd;
    public string[] GetShootEnd() { return ShootEnd; } 
    public void SetShootEnd(string[] value, int count, int length) { ShootEnd = value; ShootEndCount = count; ShootEndLength = length; } 
    
    #if !CITO
     internal
    #endif
     int ShootEndCount;
    public int GetShootEndCount() { return ShootEndCount; } 
    
    #if !CITO
     internal
    #endif
     int ShootEndLength;
    public int GetShootEndLength() { return ShootEndLength; } 
    public void ShootEndAdd(string value){if(ShootEndCount >= ShootEndLength)
    {
    string[] ShootEnd2 = new string[ShootEndLength*2];
    ShootEndLength = ShootEndLength*2;
    for(int i=0;i<ShootEndCount;i++)
    {
    ShootEnd2[i] = ShootEnd[i];
    }
    ShootEnd=ShootEnd2;
    }
    ShootEnd[ShootEndCount] = value;
    ShootEndCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     string[] Reload;
    public string[] GetReload() { return Reload; } 
    public void SetReload(string[] value, int count, int length) { Reload = value; ReloadCount = count; ReloadLength = length; } 
    
    #if !CITO
     internal
    #endif
     int ReloadCount;
    public int GetReloadCount() { return ReloadCount; } 
    
    #if !CITO
     internal
    #endif
     int ReloadLength;
    public int GetReloadLength() { return ReloadLength; } 
    public void ReloadAdd(string value){if(ReloadCount >= ReloadLength)
    {
    string[] Reload2 = new string[ReloadLength*2];
    ReloadLength = ReloadLength*2;
    for(int i=0;i<ReloadCount;i++)
    {
    Reload2[i] = Reload[i];
    }
    Reload=Reload2;
    }
    Reload[ReloadCount] = value;
    ReloadCount++;
    }
    
    
}

public class Packet_BlockType
{
    
    #if !CITO
     internal
    #endif
     string TextureIdTop;
    public string GetTextureIdTop() { return TextureIdTop; } 
    public void SetTextureIdTop(string value) { TextureIdTop = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdBottom;
    public string GetTextureIdBottom() { return TextureIdBottom; } 
    public void SetTextureIdBottom(string value) { TextureIdBottom = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdFront;
    public string GetTextureIdFront() { return TextureIdFront; } 
    public void SetTextureIdFront(string value) { TextureIdFront = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdBack;
    public string GetTextureIdBack() { return TextureIdBack; } 
    public void SetTextureIdBack(string value) { TextureIdBack = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdLeft;
    public string GetTextureIdLeft() { return TextureIdLeft; } 
    public void SetTextureIdLeft(string value) { TextureIdLeft = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdRight;
    public string GetTextureIdRight() { return TextureIdRight; } 
    public void SetTextureIdRight(string value) { TextureIdRight = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string TextureIdForInventory;
    public string GetTextureIdForInventory() { return TextureIdForInventory; } 
    public void SetTextureIdForInventory(string value) { TextureIdForInventory = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DrawType;
    public int GetDrawType() { return DrawType; } 
    public void SetDrawType(int value) { DrawType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int WalkableType;
    public int GetWalkableType() { return WalkableType; } 
    public void SetWalkableType(int value) { WalkableType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Rail;
    public int GetRail() { return Rail; } 
    public void SetRail(int value) { Rail = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int WalkSpeedFloat;
    public int GetWalkSpeedFloat() { return WalkSpeedFloat; } 
    public void SetWalkSpeedFloat(int value) { WalkSpeedFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IsSlipperyWalk;
    public bool GetIsSlipperyWalk() { return IsSlipperyWalk; } 
    public void SetIsSlipperyWalk(bool value) { IsSlipperyWalk = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_SoundSet Sounds;
    public Packet_SoundSet GetSounds() { return Sounds; } 
    public void SetSounds(Packet_SoundSet value) { Sounds = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int LightRadius;
    public int GetLightRadius() { return LightRadius; } 
    public void SetLightRadius(int value) { LightRadius = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int StartInventoryAmount;
    public int GetStartInventoryAmount() { return StartInventoryAmount; } 
    public void SetStartInventoryAmount(int value) { StartInventoryAmount = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Strength;
    public int GetStrength() { return Strength; } 
    public void SetStrength(int value) { Strength = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Name;
    public string GetName() { return Name; } 
    public void SetName(string value) { Name = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IsBuildable;
    public bool GetIsBuildable() { return IsBuildable; } 
    public void SetIsBuildable(bool value) { IsBuildable = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IsUsable;
    public bool GetIsUsable() { return IsUsable; } 
    public void SetIsUsable(bool value) { IsUsable = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IsTool;
    public bool GetIsTool() { return IsTool; } 
    public void SetIsTool(bool value) { IsTool = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Handimage;
    public string GetHandimage() { return Handimage; } 
    public void SetHandimage(string value) { Handimage = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IsPistol;
    public bool GetIsPistol() { return IsPistol; } 
    public void SetIsPistol(bool value) { IsPistol = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AimRadiusFloat;
    public int GetAimRadiusFloat() { return AimRadiusFloat; } 
    public void SetAimRadiusFloat(int value) { AimRadiusFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int RecoilFloat;
    public int GetRecoilFloat() { return RecoilFloat; } 
    public void SetRecoilFloat(int value) { RecoilFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DelayFloat;
    public int GetDelayFloat() { return DelayFloat; } 
    public void SetDelayFloat(int value) { DelayFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BulletsPerShotFloat;
    public int GetBulletsPerShotFloat() { return BulletsPerShotFloat; } 
    public void SetBulletsPerShotFloat(int value) { BulletsPerShotFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int WalkSpeedWhenUsedFloat;
    public int GetWalkSpeedWhenUsedFloat() { return WalkSpeedWhenUsedFloat; } 
    public void SetWalkSpeedWhenUsedFloat(int value) { WalkSpeedWhenUsedFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool IronSightsEnabled;
    public bool GetIronSightsEnabled() { return IronSightsEnabled; } 
    public void SetIronSightsEnabled(bool value) { IronSightsEnabled = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IronSightsMoveSpeedFloat;
    public int GetIronSightsMoveSpeedFloat() { return IronSightsMoveSpeedFloat; } 
    public void SetIronSightsMoveSpeedFloat(int value) { IronSightsMoveSpeedFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string IronSightsImage;
    public string GetIronSightsImage() { return IronSightsImage; } 
    public void SetIronSightsImage(string value) { IronSightsImage = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IronSightsAimRadiusFloat;
    public int GetIronSightsAimRadiusFloat() { return IronSightsAimRadiusFloat; } 
    public void SetIronSightsAimRadiusFloat(int value) { IronSightsAimRadiusFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IronSightsFovFloat;
    public int GetIronSightsFovFloat() { return IronSightsFovFloat; } 
    public void SetIronSightsFovFloat(int value) { IronSightsFovFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AmmoMagazine;
    public int GetAmmoMagazine() { return AmmoMagazine; } 
    public void SetAmmoMagazine(int value) { AmmoMagazine = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AmmoTotal;
    public int GetAmmoTotal() { return AmmoTotal; } 
    public void SetAmmoTotal(int value) { AmmoTotal = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ReloadDelayFloat;
    public int GetReloadDelayFloat() { return ReloadDelayFloat; } 
    public void SetReloadDelayFloat(int value) { ReloadDelayFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ExplosionRangeFloat;
    public int GetExplosionRangeFloat() { return ExplosionRangeFloat; } 
    public void SetExplosionRangeFloat(int value) { ExplosionRangeFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ExplosionTimeFloat;
    public int GetExplosionTimeFloat() { return ExplosionTimeFloat; } 
    public void SetExplosionTimeFloat(int value) { ExplosionTimeFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ProjectileSpeedFloat;
    public int GetProjectileSpeedFloat() { return ProjectileSpeedFloat; } 
    public void SetProjectileSpeedFloat(int value) { ProjectileSpeedFloat = value; } 
    
    
    /// <summary> 0 is infinite</summary>
    
    #if !CITO
     internal
    #endif
     bool ProjectileBounce;
    public bool GetProjectileBounce() { return ProjectileBounce; } 
    public void SetProjectileBounce(bool value) { ProjectileBounce = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DamageBodyFloat;
    public int GetDamageBodyFloat() { return DamageBodyFloat; } 
    public void SetDamageBodyFloat(int value) { DamageBodyFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DamageHeadFloat;
    public int GetDamageHeadFloat() { return DamageHeadFloat; } 
    public void SetDamageHeadFloat(int value) { DamageHeadFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int PistolType;
    public int GetPistolType() { return PistolType; } 
    public void SetPistolType(int value) { PistolType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DamageToPlayer;
    public int GetDamageToPlayer() { return DamageToPlayer; } 
    public void SetDamageToPlayer(int value) { DamageToPlayer = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int WhenPlacedGetsConvertedTo;
    public int GetWhenPlacedGetsConvertedTo() { return WhenPlacedGetsConvertedTo; } 
    public void SetWhenPlacedGetsConvertedTo(int value) { WhenPlacedGetsConvertedTo = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int PickDistanceWhenUsedFloat;
    public int GetPickDistanceWhenUsedFloat() { return PickDistanceWhenUsedFloat; } 
    public void SetPickDistanceWhenUsedFloat(int value) { PickDistanceWhenUsedFloat = value; } 
    
    
}

public class Packet_ServerIdentification
{
    
    #if !CITO
     internal
    #endif
     string MdProtocolVersion;
    public string GetMdProtocolVersion() { return MdProtocolVersion; } 
    public void SetMdProtocolVersion(string value) { MdProtocolVersion = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int AssignedClientId;
    public int GetAssignedClientId() { return AssignedClientId; } 
    public void SetAssignedClientId(int value) { AssignedClientId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string ServerName;
    public string GetServerName() { return ServerName; } 
    public void SetServerName(string value) { ServerName = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string ServerMotd;
    public string GetServerMotd() { return ServerMotd; } 
    public void SetServerMotd(string value) { ServerMotd = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeX;
    public int GetMapSizeX() { return MapSizeX; } 
    public void SetMapSizeX(int value) { MapSizeX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeY;
    public int GetMapSizeY() { return MapSizeY; } 
    public void SetMapSizeY(int value) { MapSizeY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeZ;
    public int GetMapSizeZ() { return MapSizeZ; } 
    public void SetMapSizeZ(int value) { MapSizeZ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DisableShadows;
    public int GetDisableShadows() { return DisableShadows; } 
    public void SetDisableShadows(int value) { DisableShadows = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int PlayerAreaSize;
    public int GetPlayerAreaSize() { return PlayerAreaSize; } 
    public void SetPlayerAreaSize(int value) { PlayerAreaSize = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int RenderHint_;
    public int GetRenderHint_() { return RenderHint_; } 
    public void SetRenderHint_(int value) { RenderHint_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_StringList RequiredBlobMd5;
    public Packet_StringList GetRequiredBlobMd5() { return RequiredBlobMd5; } 
    public void SetRequiredBlobMd5(Packet_StringList value) { RequiredBlobMd5 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_StringList RequiredBlobName;
    public Packet_StringList GetRequiredBlobName() { return RequiredBlobName; } 
    public void SetRequiredBlobName(Packet_StringList value) { RequiredBlobName = value; } 
    
    
}

public class Packet_StringList
{
    
    #if !CITO
     internal
    #endif
     string[] Items;
    public string[] GetItems() { return Items; } 
    public void SetItems(string[] value, int count, int length) { Items = value; ItemsCount = count; ItemsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int ItemsCount;
    public int GetItemsCount() { return ItemsCount; } 
    
    #if !CITO
     internal
    #endif
     int ItemsLength;
    public int GetItemsLength() { return ItemsLength; } 
    public void ItemsAdd(string value){if(ItemsCount >= ItemsLength)
    {
    string[] Items2 = new string[ItemsLength*2];
    ItemsLength = ItemsLength*2;
    for(int i=0;i<ItemsCount;i++)
    {
    Items2[i] = Items[i];
    }
    Items=Items2;
    }
    Items[ItemsCount] = value;
    ItemsCount++;
    }
    
    
}

public class Packet_IntString
{
    
    #if !CITO
     internal
    #endif
     int Key_;
    public int GetKey_() { return Key_; } 
    public void SetKey_(int value) { Key_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Value_;
    public string GetValue_() { return Value_; } 
    public void SetValue_(string value) { Value_ = value; } 
    
    
}

public class Packet_ServerPlayerSpawnPosition
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
}

public class Packet_ServerLevelInitialize
{
}

public class Packet_ServerBlobInitialize
{
    /// <summary>
    /// <para>[ProtoMember(1, IsRequired = false)]</para>
    /// <para>optional byte[] hash; //todo, currently ignored.</para>
    /// </summary>
    
    #if !CITO
     internal
    #endif
     string Name;
    public string GetName() { return Name; } 
    public void SetName(string value) { Name = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Md5;
    public string GetMd5() { return Md5; } 
    public void SetMd5(string value) { Md5 = value; } 
    
    
}

public class Packet_ServerBlobPart
{
    
    #if !CITO
     internal
    #endif
     byte[] Data;
    public byte[] GetData() { return Data; } 
    public void SetData(byte[] value) { Data = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Islastpart;
    public int GetIslastpart() { return Islastpart; } 
    public void SetIslastpart(int value) { Islastpart = value; } 
    
    
}

public class Packet_ServerBlobFinalize
{
}

public class Packet_ServerBlockTypes
{
}

public class Packet_ServerBlockType
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_BlockType Blocktype;
    public Packet_BlockType GetBlocktype() { return Blocktype; } 
    public void SetBlocktype(Packet_BlockType value) { Blocktype = value; } 
    
    
}

public class Packet_ServerSunLevels
{
    
    #if !CITO
     internal
    #endif
     int[] Sunlevels;
    public int[] GetSunlevels() { return Sunlevels; } 
    public void SetSunlevels(int[] value, int count, int length) { Sunlevels = value; SunlevelsCount = count; SunlevelsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int SunlevelsCount;
    public int GetSunlevelsCount() { return SunlevelsCount; } 
    
    #if !CITO
     internal
    #endif
     int SunlevelsLength;
    public int GetSunlevelsLength() { return SunlevelsLength; } 
    public void SunlevelsAdd(int value){if(SunlevelsCount >= SunlevelsLength)
    {
    int[] Sunlevels2 = new int[SunlevelsLength*2];
    SunlevelsLength = SunlevelsLength*2;
    for(int i=0;i<SunlevelsCount;i++)
    {
    Sunlevels2[i] = Sunlevels[i];
    }
    Sunlevels=Sunlevels2;
    }
    Sunlevels[SunlevelsCount] = value;
    SunlevelsCount++;
    }
    
    
}

public class Packet_ServerLightLevels
{
    
    #if !CITO
     internal
    #endif
     int[] Lightlevels;
    public int[] GetLightlevels() { return Lightlevels; } 
    public void SetLightlevels(int[] value, int count, int length) { Lightlevels = value; LightlevelsCount = count; LightlevelsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int LightlevelsCount;
    public int GetLightlevelsCount() { return LightlevelsCount; } 
    
    #if !CITO
     internal
    #endif
     int LightlevelsLength;
    public int GetLightlevelsLength() { return LightlevelsLength; } 
    public void LightlevelsAdd(int value){if(LightlevelsCount >= LightlevelsLength)
    {
    int[] Lightlevels2 = new int[LightlevelsLength*2];
    LightlevelsLength = LightlevelsLength*2;
    for(int i=0;i<LightlevelsCount;i++)
    {
    Lightlevels2[i] = Lightlevels[i];
    }
    Lightlevels=Lightlevels2;
    }
    Lightlevels[LightlevelsCount] = value;
    LightlevelsCount++;
    }
    
    
}

public class Packet_ServerCraftingRecipes
{
    
    #if !CITO
     internal
    #endif
     Packet_CraftingRecipe[] CraftingRecipes;
    public Packet_CraftingRecipe[] GetCraftingRecipes() { return CraftingRecipes; } 
    public void SetCraftingRecipes(Packet_CraftingRecipe[] value, int count, int length) { CraftingRecipes = value; CraftingRecipesCount = count; CraftingRecipesLength = length; } 
    
    #if !CITO
     internal
    #endif
     int CraftingRecipesCount;
    public int GetCraftingRecipesCount() { return CraftingRecipesCount; } 
    
    #if !CITO
     internal
    #endif
     int CraftingRecipesLength;
    public int GetCraftingRecipesLength() { return CraftingRecipesLength; } 
    public void CraftingRecipesAdd(Packet_CraftingRecipe value){if(CraftingRecipesCount >= CraftingRecipesLength)
    {
    Packet_CraftingRecipe[] CraftingRecipes2 = new Packet_CraftingRecipe[CraftingRecipesLength*2];
    CraftingRecipesLength = CraftingRecipesLength*2;
    for(int i=0;i<CraftingRecipesCount;i++)
    {
    CraftingRecipes2[i] = CraftingRecipes[i];
    }
    CraftingRecipes=CraftingRecipes2;
    }
    CraftingRecipes[CraftingRecipesCount] = value;
    CraftingRecipesCount++;
    }
    
    
}

public class Packet_Ingredient
{
    
    #if !CITO
     internal
    #endif
     int Type;
    public int GetType() { return Type; } 
    public void SetType(int value) { Type = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Amount;
    public int GetAmount() { return Amount; } 
    public void SetAmount(int value) { Amount = value; } 
    
    
}

public class Packet_CraftingRecipe
{
    
    #if !CITO
     internal
    #endif
     Packet_Ingredient[] Ingredients;
    public Packet_Ingredient[] GetIngredients() { return Ingredients; } 
    public void SetIngredients(Packet_Ingredient[] value, int count, int length) { Ingredients = value; IngredientsCount = count; IngredientsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int IngredientsCount;
    public int GetIngredientsCount() { return IngredientsCount; } 
    
    #if !CITO
     internal
    #endif
     int IngredientsLength;
    public int GetIngredientsLength() { return IngredientsLength; } 
    public void IngredientsAdd(Packet_Ingredient value){if(IngredientsCount >= IngredientsLength)
    {
    Packet_Ingredient[] Ingredients2 = new Packet_Ingredient[IngredientsLength*2];
    IngredientsLength = IngredientsLength*2;
    for(int i=0;i<IngredientsCount;i++)
    {
    Ingredients2[i] = Ingredients[i];
    }
    Ingredients=Ingredients2;
    }
    Ingredients[IngredientsCount] = value;
    IngredientsCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Ingredient Output;
    public Packet_Ingredient GetOutput() { return Output; } 
    public void SetOutput(Packet_Ingredient value) { Output = value; } 
    
    
}

public class Packet_ServerLevelProgress
{
    /// <summary>
    /// <para>[ProtoMember(1, IsRequired = false)]</para>
    /// <para>optional byte[] Chunk;</para>
    /// </summary>
    
    #if !CITO
     internal
    #endif
     int PercentComplete;
    public int GetPercentComplete() { return PercentComplete; } 
    public void SetPercentComplete(int value) { PercentComplete = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Status;
    public string GetStatus() { return Status; } 
    public void SetStatus(string value) { Status = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int PercentCompleteSubitem;
    public int GetPercentCompleteSubitem() { return PercentCompleteSubitem; } 
    public void SetPercentCompleteSubitem(int value) { PercentCompleteSubitem = value; } 
    
    
}

public class Packet_ServerLevelFinalize
{
}

public class Packet_ServerSetBlock
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockType;
    public int GetBlockType() { return BlockType; } 
    public void SetBlockType(int value) { BlockType = value; } 
    
    
}

public class Packet_ServerFillArea
{
    
    #if !CITO
     internal
    #endif
     int X1;
    public int GetX1() { return X1; } 
    public void SetX1(int value) { X1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X2;
    public int GetX2() { return X2; } 
    public void SetX2(int value) { X2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y1;
    public int GetY1() { return Y1; } 
    public void SetY1(int value) { Y1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y2;
    public int GetY2() { return Y2; } 
    public void SetY2(int value) { Y2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z1;
    public int GetZ1() { return Z1; } 
    public void SetZ1(int value) { Z1 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z2;
    public int GetZ2() { return Z2; } 
    public void SetZ2(int value) { Z2 = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockType;
    public int GetBlockType() { return BlockType; } 
    public void SetBlockType(int value) { BlockType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockCount;
    public int GetBlockCount() { return BlockCount; } 
    public void SetBlockCount(int value) { BlockCount = value; } 
    
    
}

public class Packet_ServerFillAreaLimit
{
    
    #if !CITO
     internal
    #endif
     int Limit;
    public int GetLimit() { return Limit; } 
    public void SetLimit(int value) { Limit = value; } 
    
    
}

public class Packet_ServerFreemove
{
    
    #if !CITO
     internal
    #endif
     int IsEnabled;
    public int GetIsEnabled() { return IsEnabled; } 
    public void SetIsEnabled(int value) { IsEnabled = value; } 
    
    
}

public class Packet_ServerMessage
{
    /// <summary> optional int32 playerId = 1;</summary>
    
    #if !CITO
     internal
    #endif
     string Message;
    public string GetMessage() { return Message; } 
    public void SetMessage(string value) { Message = value; } 
    
    
}

public class Packet_ServerDisconnectPlayer
{
    
    #if !CITO
     internal
    #endif
     string DisconnectReason;
    public string GetDisconnectReason() { return DisconnectReason; } 
    public void SetDisconnectReason(string value) { DisconnectReason = value; } 
    
    
}

public class Packet_ServerSound
{
    
    #if !CITO
     internal
    #endif
     string Name;
    public string GetName() { return Name; } 
    public void SetName(string value) { Name = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
}

public class Packet_ServerFollow
{
    
    #if !CITO
     internal
    #endif
     string Client;
    public string GetClient() { return Client; } 
    public void SetClient(string value) { Client = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Tpp;
    public int GetTpp() { return Tpp; } 
    public void SetTpp(int value) { Tpp = value; } 
    
    
}

public class Packet_ServerBullet
{
    
    #if !CITO
     internal
    #endif
     int FromXFloat;
    public int GetFromXFloat() { return FromXFloat; } 
    public void SetFromXFloat(int value) { FromXFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromYFloat;
    public int GetFromYFloat() { return FromYFloat; } 
    public void SetFromYFloat(int value) { FromYFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromZFloat;
    public int GetFromZFloat() { return FromZFloat; } 
    public void SetFromZFloat(int value) { FromZFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToXFloat;
    public int GetToXFloat() { return ToXFloat; } 
    public void SetToXFloat(int value) { ToXFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToYFloat;
    public int GetToYFloat() { return ToYFloat; } 
    public void SetToYFloat(int value) { ToYFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ToZFloat;
    public int GetToZFloat() { return ToZFloat; } 
    public void SetToZFloat(int value) { ToZFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SpeedFloat;
    public int GetSpeedFloat() { return SpeedFloat; } 
    public void SetSpeedFloat(int value) { SpeedFloat = value; } 
    
    
}

public class Packet_ServerProjectile
{
    
    #if !CITO
     internal
    #endif
     int FromXFloat;
    public int GetFromXFloat() { return FromXFloat; } 
    public void SetFromXFloat(int value) { FromXFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromYFloat;
    public int GetFromYFloat() { return FromYFloat; } 
    public void SetFromYFloat(int value) { FromYFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FromZFloat;
    public int GetFromZFloat() { return FromZFloat; } 
    public void SetFromZFloat(int value) { FromZFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int VelocityXFloat;
    public int GetVelocityXFloat() { return VelocityXFloat; } 
    public void SetVelocityXFloat(int value) { VelocityXFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int VelocityYFloat;
    public int GetVelocityYFloat() { return VelocityYFloat; } 
    public void SetVelocityYFloat(int value) { VelocityYFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int VelocityZFloat;
    public int GetVelocityZFloat() { return VelocityZFloat; } 
    public void SetVelocityZFloat(int value) { VelocityZFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockId;
    public int GetBlockId() { return BlockId; } 
    public void SetBlockId(int value) { BlockId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ExplodesAfterFloat;
    public int GetExplodesAfterFloat() { return ExplodesAfterFloat; } 
    public void SetExplodesAfterFloat(int value) { ExplodesAfterFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SourcePlayerID;
    public int GetSourcePlayerID() { return SourcePlayerID; } 
    public void SetSourcePlayerID(int value) { SourcePlayerID = value; } 
    
    
}

public class Packet_ServerExplosion
{
    
    #if !CITO
     internal
    #endif
     int XFloat;
    public int GetXFloat() { return XFloat; } 
    public void SetXFloat(int value) { XFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int YFloat;
    public int GetYFloat() { return YFloat; } 
    public void SetYFloat(int value) { YFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ZFloat;
    public int GetZFloat() { return ZFloat; } 
    public void SetZFloat(int value) { ZFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IsRelativeToPlayerPosition;
    public int GetIsRelativeToPlayerPosition() { return IsRelativeToPlayerPosition; } 
    public void SetIsRelativeToPlayerPosition(int value) { IsRelativeToPlayerPosition = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int RangeFloat;
    public int GetRangeFloat() { return RangeFloat; } 
    public void SetRangeFloat(int value) { RangeFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int TimeFloat;
    public int GetTimeFloat() { return TimeFloat; } 
    public void SetTimeFloat(int value) { TimeFloat = value; } 
    
    
}

public class Packet_ServerQueryAnswer
{
    
    #if !CITO
     internal
    #endif
     string Name;
    public string GetName() { return Name; } 
    public void SetName(string value) { Name = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string MOTD;
    public string GetMOTD() { return MOTD; } 
    public void SetMOTD(string value) { MOTD = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int PlayerCount;
    public int GetPlayerCount() { return PlayerCount; } 
    public void SetPlayerCount(int value) { PlayerCount = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MaxPlayers;
    public int GetMaxPlayers() { return MaxPlayers; } 
    public void SetMaxPlayers(int value) { MaxPlayers = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string PlayerList;
    public string GetPlayerList() { return PlayerList; } 
    public void SetPlayerList(string value) { PlayerList = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Port;
    public int GetPort() { return Port; } 
    public void SetPort(int value) { Port = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string GameMode;
    public string GetGameMode() { return GameMode; } 
    public void SetGameMode(string value) { GameMode = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool Password;
    public bool GetPassword() { return Password; } 
    public void SetPassword(bool value) { Password = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string PublicHash;
    public string GetPublicHash() { return PublicHash; } 
    public void SetPublicHash(string value) { PublicHash = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string ServerVersion;
    public string GetServerVersion() { return ServerVersion; } 
    public void SetServerVersion(string value) { ServerVersion = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeX;
    public int GetMapSizeX() { return MapSizeX; } 
    public void SetMapSizeX(int value) { MapSizeX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeY;
    public int GetMapSizeY() { return MapSizeY; } 
    public void SetMapSizeY(int value) { MapSizeY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MapSizeZ;
    public int GetMapSizeZ() { return MapSizeZ; } 
    public void SetMapSizeZ(int value) { MapSizeZ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     byte[] ServerThumbnail;
    public byte[] GetServerThumbnail() { return ServerThumbnail; } 
    public void SetServerThumbnail(byte[] value) { ServerThumbnail = value; } 
    
    
}

public class Packet_ServerRedirect
{
    
    #if !CITO
     internal
    #endif
     string IP;
    public string GetIP() { return IP; } 
    public void SetIP(string value) { IP = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Port;
    public int GetPort() { return Port; } 
    public void SetPort(int value) { Port = value; } 
    
    
}

public class Packet_Server
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerIdentification Identification;
    public Packet_ServerIdentification GetIdentification() { return Identification; } 
    public void SetIdentification(Packet_ServerIdentification value) { Identification = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerLevelInitialize LevelInitialize;
    public Packet_ServerLevelInitialize GetLevelInitialize() { return LevelInitialize; } 
    public void SetLevelInitialize(Packet_ServerLevelInitialize value) { LevelInitialize = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerLevelProgress LevelDataChunk;
    public Packet_ServerLevelProgress GetLevelDataChunk() { return LevelDataChunk; } 
    public void SetLevelDataChunk(Packet_ServerLevelProgress value) { LevelDataChunk = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerLevelFinalize LevelFinalize;
    public Packet_ServerLevelFinalize GetLevelFinalize() { return LevelFinalize; } 
    public void SetLevelFinalize(Packet_ServerLevelFinalize value) { LevelFinalize = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerSetBlock SetBlock;
    public Packet_ServerSetBlock GetSetBlock() { return SetBlock; } 
    public void SetSetBlock(Packet_ServerSetBlock value) { SetBlock = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerFillArea FillArea;
    public Packet_ServerFillArea GetFillArea() { return FillArea; } 
    public void SetFillArea(Packet_ServerFillArea value) { FillArea = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerFillAreaLimit FillAreaLimit;
    public Packet_ServerFillAreaLimit GetFillAreaLimit() { return FillAreaLimit; } 
    public void SetFillAreaLimit(Packet_ServerFillAreaLimit value) { FillAreaLimit = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerFreemove Freemove;
    public Packet_ServerFreemove GetFreemove() { return Freemove; } 
    public void SetFreemove(Packet_ServerFreemove value) { Freemove = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerMessage Message;
    public Packet_ServerMessage GetMessage() { return Message; } 
    public void SetMessage(Packet_ServerMessage value) { Message = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerDisconnectPlayer DisconnectPlayer;
    public Packet_ServerDisconnectPlayer GetDisconnectPlayer() { return DisconnectPlayer; } 
    public void SetDisconnectPlayer(Packet_ServerDisconnectPlayer value) { DisconnectPlayer = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerChunk Chunk_;
    public Packet_ServerChunk GetChunk_() { return Chunk_; } 
    public void SetChunk_(Packet_ServerChunk value) { Chunk_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerInventory Inventory;
    public Packet_ServerInventory GetInventory() { return Inventory; } 
    public void SetInventory(Packet_ServerInventory value) { Inventory = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerSeason Season;
    public Packet_ServerSeason GetSeason() { return Season; } 
    public void SetSeason(Packet_ServerSeason value) { Season = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBlobInitialize BlobInitialize;
    public Packet_ServerBlobInitialize GetBlobInitialize() { return BlobInitialize; } 
    public void SetBlobInitialize(Packet_ServerBlobInitialize value) { BlobInitialize = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBlobPart BlobPart;
    public Packet_ServerBlobPart GetBlobPart() { return BlobPart; } 
    public void SetBlobPart(Packet_ServerBlobPart value) { BlobPart = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBlobFinalize BlobFinalize;
    public Packet_ServerBlobFinalize GetBlobFinalize() { return BlobFinalize; } 
    public void SetBlobFinalize(Packet_ServerBlobFinalize value) { BlobFinalize = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerHeightmapChunk HeightmapChunk;
    public Packet_ServerHeightmapChunk GetHeightmapChunk() { return HeightmapChunk; } 
    public void SetHeightmapChunk(Packet_ServerHeightmapChunk value) { HeightmapChunk = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerPing Ping;
    public Packet_ServerPing GetPing() { return Ping; } 
    public void SetPing(Packet_ServerPing value) { Ping = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerPlayerPing PlayerPing;
    public Packet_ServerPlayerPing GetPlayerPing() { return PlayerPing; } 
    public void SetPlayerPing(Packet_ServerPlayerPing value) { PlayerPing = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerSound Sound;
    public Packet_ServerSound GetSound() { return Sound; } 
    public void SetSound(Packet_ServerSound value) { Sound = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerPlayerStats PlayerStats;
    public Packet_ServerPlayerStats GetPlayerStats() { return PlayerStats; } 
    public void SetPlayerStats(Packet_ServerPlayerStats value) { PlayerStats = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerMonsters Monster;
    public Packet_ServerMonsters GetMonster() { return Monster; } 
    public void SetMonster(Packet_ServerMonsters value) { Monster = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerPlayerSpawnPosition PlayerSpawnPosition;
    public Packet_ServerPlayerSpawnPosition GetPlayerSpawnPosition() { return PlayerSpawnPosition; } 
    public void SetPlayerSpawnPosition(Packet_ServerPlayerSpawnPosition value) { PlayerSpawnPosition = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBlockTypes BlockTypes;
    public Packet_ServerBlockTypes GetBlockTypes() { return BlockTypes; } 
    public void SetBlockTypes(Packet_ServerBlockTypes value) { BlockTypes = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerSunLevels SunLevels;
    public Packet_ServerSunLevels GetSunLevels() { return SunLevels; } 
    public void SetSunLevels(Packet_ServerSunLevels value) { SunLevels = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerLightLevels LightLevels;
    public Packet_ServerLightLevels GetLightLevels() { return LightLevels; } 
    public void SetLightLevels(Packet_ServerLightLevels value) { LightLevels = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerCraftingRecipes CraftingRecipes;
    public Packet_ServerCraftingRecipes GetCraftingRecipes() { return CraftingRecipes; } 
    public void SetCraftingRecipes(Packet_ServerCraftingRecipes value) { CraftingRecipes = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerDialog Dialog;
    public Packet_ServerDialog GetDialog() { return Dialog; } 
    public void SetDialog(Packet_ServerDialog value) { Dialog = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerFollow Follow;
    public Packet_ServerFollow GetFollow() { return Follow; } 
    public void SetFollow(Packet_ServerFollow value) { Follow = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBullet Bullet;
    public Packet_ServerBullet GetBullet() { return Bullet; } 
    public void SetBullet(Packet_ServerBullet value) { Bullet = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerAmmo Ammo;
    public Packet_ServerAmmo GetAmmo() { return Ammo; } 
    public void SetAmmo(Packet_ServerAmmo value) { Ammo = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerBlockType BlockType;
    public Packet_ServerBlockType GetBlockType() { return BlockType; } 
    public void SetBlockType(Packet_ServerBlockType value) { BlockType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerChunkPart ChunkPart;
    public Packet_ServerChunkPart GetChunkPart() { return ChunkPart; } 
    public void SetChunkPart(Packet_ServerChunkPart value) { ChunkPart = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerExplosion Explosion;
    public Packet_ServerExplosion GetExplosion() { return Explosion; } 
    public void SetExplosion(Packet_ServerExplosion value) { Explosion = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerProjectile Projectile;
    public Packet_ServerProjectile GetProjectile() { return Projectile; } 
    public void SetProjectile(Packet_ServerProjectile value) { Projectile = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerTranslatedString Translation;
    public Packet_ServerTranslatedString GetTranslation() { return Translation; } 
    public void SetTranslation(Packet_ServerTranslatedString value) { Translation = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerQueryAnswer QueryAnswer;
    public Packet_ServerQueryAnswer GetQueryAnswer() { return QueryAnswer; } 
    public void SetQueryAnswer(Packet_ServerQueryAnswer value) { QueryAnswer = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerRedirect Redirect;
    public Packet_ServerRedirect GetRedirect() { return Redirect; } 
    public void SetRedirect(Packet_ServerRedirect value) { Redirect = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntitySpawn EntitySpawn;
    public Packet_ServerEntitySpawn GetEntitySpawn() { return EntitySpawn; } 
    public void SetEntitySpawn(Packet_ServerEntitySpawn value) { EntitySpawn = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityPositionAndOrientation EntityPosition;
    public Packet_ServerEntityPositionAndOrientation GetEntityPosition() { return EntityPosition; } 
    public void SetEntityPosition(Packet_ServerEntityPositionAndOrientation value) { EntityPosition = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityDespawn EntityDespawn;
    public Packet_ServerEntityDespawn GetEntityDespawn() { return EntityDespawn; } 
    public void SetEntityDespawn(Packet_ServerEntityDespawn value) { EntityDespawn = value; } 
    
    
}

public class Packet_ServerEntitySpawn
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntity Entity_;
    public Packet_ServerEntity GetEntity_() { return Entity_; } 
    public void SetEntity_(Packet_ServerEntity value) { Entity_ = value; } 
    
    
}

public class Packet_ServerEntityPositionAndOrientation
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_PositionAndOrientation PositionAndOrientation;
    public Packet_PositionAndOrientation GetPositionAndOrientation() { return PositionAndOrientation; } 
    public void SetPositionAndOrientation(Packet_PositionAndOrientation value) { PositionAndOrientation = value; } 
    
    
}

public class Packet_ServerEntityDespawn
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
}

public class Packet_ServerEntity
{
    
    #if !CITO
     internal
    #endif
     Packet_PositionAndOrientation Position;
    public Packet_PositionAndOrientation GetPosition() { return Position; } 
    public void SetPosition(Packet_PositionAndOrientation value) { Position = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityAnimatedModel DrawModel;
    public Packet_ServerEntityAnimatedModel GetDrawModel() { return DrawModel; } 
    public void SetDrawModel(Packet_ServerEntityAnimatedModel value) { DrawModel = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityDrawName DrawName_;
    public Packet_ServerEntityDrawName GetDrawName_() { return DrawName_; } 
    public void SetDrawName_(Packet_ServerEntityDrawName value) { DrawName_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityDrawText DrawText;
    public Packet_ServerEntityDrawText GetDrawText() { return DrawText; } 
    public void SetDrawText(Packet_ServerEntityDrawText value) { DrawText = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityDrawBlock DrawBlock;
    public Packet_ServerEntityDrawBlock GetDrawBlock() { return DrawBlock; } 
    public void SetDrawBlock(Packet_ServerEntityDrawBlock value) { DrawBlock = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityPush Push;
    public Packet_ServerEntityPush GetPush() { return Push; } 
    public void SetPush(Packet_ServerEntityPush value) { Push = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool Usable;
    public bool GetUsable() { return Usable; } 
    public void SetUsable(bool value) { Usable = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerPlayerStats PlayerStats;
    public Packet_ServerPlayerStats GetPlayerStats() { return PlayerStats; } 
    public void SetPlayerStats(Packet_ServerPlayerStats value) { PlayerStats = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_ServerEntityDrawArea DrawArea;
    public Packet_ServerEntityDrawArea GetDrawArea() { return DrawArea; } 
    public void SetDrawArea(Packet_ServerEntityDrawArea value) { DrawArea = value; } 
    
    
}

public class Packet_ServerEntityDrawArea
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Sizex;
    public int GetSizex() { return Sizex; } 
    public void SetSizex(int value) { Sizex = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Sizey;
    public int GetSizey() { return Sizey; } 
    public void SetSizey(int value) { Sizey = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Sizez;
    public int GetSizez() { return Sizez; } 
    public void SetSizez(int value) { Sizez = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int VisibleToClientId;
    public int GetVisibleToClientId() { return VisibleToClientId; } 
    public void SetVisibleToClientId(int value) { VisibleToClientId = value; } 
    
    
}

public class Packet_ServerEntityAnimatedModel
{
    
    #if !CITO
     internal
    #endif
     string Model_;
    public string GetModel_() { return Model_; } 
    public void SetModel_(string value) { Model_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Texture_;
    public string GetTexture_() { return Texture_; } 
    public void SetTexture_(string value) { Texture_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int EyeHeight;
    public int GetEyeHeight() { return EyeHeight; } 
    public void SetEyeHeight(int value) { EyeHeight = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ModelHeight;
    public int GetModelHeight() { return ModelHeight; } 
    public void SetModelHeight(int value) { ModelHeight = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int DownloadSkin;
    public int GetDownloadSkin() { return DownloadSkin; } 
    public void SetDownloadSkin(int value) { DownloadSkin = value; } 
    
    
}

public class Packet_ServerEntityDrawName
{
    
    #if !CITO
     internal
    #endif
     string Name;
    public string GetName() { return Name; } 
    public void SetName(string value) { Name = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool OnlyWhenSelected;
    public bool GetOnlyWhenSelected() { return OnlyWhenSelected; } 
    public void SetOnlyWhenSelected(bool value) { OnlyWhenSelected = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     bool ClientAutoComplete;
    public bool GetClientAutoComplete() { return ClientAutoComplete; } 
    public void SetClientAutoComplete(bool value) { ClientAutoComplete = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Color;
    public string GetColor() { return Color; } 
    public void SetColor(string value) { Color = value; } 
    
    
}

public class Packet_ServerEntityDrawText
{
    
    #if !CITO
     internal
    #endif
     string Text;
    public string GetText() { return Text; } 
    public void SetText(string value) { Text = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Dx;
    public int GetDx() { return Dx; } 
    public void SetDx(int value) { Dx = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Dy;
    public int GetDy() { return Dy; } 
    public void SetDy(int value) { Dy = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Dz;
    public int GetDz() { return Dz; } 
    public void SetDz(int value) { Dz = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Rotx;
    public int GetRotx() { return Rotx; } 
    public void SetRotx(int value) { Rotx = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Roty;
    public int GetRoty() { return Roty; } 
    public void SetRoty(int value) { Roty = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Rotz;
    public int GetRotz() { return Rotz; } 
    public void SetRotz(int value) { Rotz = value; } 
    
    
}

public class Packet_ServerEntityDrawBlock
{
    
    #if !CITO
     internal
    #endif
     int BlockType;
    public int GetBlockType() { return BlockType; } 
    public void SetBlockType(int value) { BlockType = value; } 
    
    
}

public class Packet_ServerEntityPush
{
    
    #if !CITO
     internal
    #endif
     int RangeFloat;
    public int GetRangeFloat() { return RangeFloat; } 
    public void SetRangeFloat(int value) { RangeFloat = value; } 
    
    
}

public class Packet_IntInt
{
    
    #if !CITO
     internal
    #endif
     int Key_;
    public int GetKey_() { return Key_; } 
    public void SetKey_(int value) { Key_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Value_;
    public int GetValue_() { return Value_; } 
    public void SetValue_(int value) { Value_ = value; } 
    
    
}

public class Packet_ServerAmmo
{
    
    #if !CITO
     internal
    #endif
     Packet_IntInt[] TotalAmmo;
    public Packet_IntInt[] GetTotalAmmo() { return TotalAmmo; } 
    public void SetTotalAmmo(Packet_IntInt[] value, int count, int length) { TotalAmmo = value; TotalAmmoCount = count; TotalAmmoLength = length; } 
    
    #if !CITO
     internal
    #endif
     int TotalAmmoCount;
    public int GetTotalAmmoCount() { return TotalAmmoCount; } 
    
    #if !CITO
     internal
    #endif
     int TotalAmmoLength;
    public int GetTotalAmmoLength() { return TotalAmmoLength; } 
    public void TotalAmmoAdd(Packet_IntInt value){if(TotalAmmoCount >= TotalAmmoLength)
    {
    Packet_IntInt[] TotalAmmo2 = new Packet_IntInt[TotalAmmoLength*2];
    TotalAmmoLength = TotalAmmoLength*2;
    for(int i=0;i<TotalAmmoCount;i++)
    {
    TotalAmmo2[i] = TotalAmmo[i];
    }
    TotalAmmo=TotalAmmo2;
    }
    TotalAmmo[TotalAmmoCount] = value;
    TotalAmmoCount++;
    }
    
    
}

public class Packet_ServerChunkPart
{
    
    #if !CITO
     internal
    #endif
     byte[] CompressedChunkPart;
    public byte[] GetCompressedChunkPart() { return CompressedChunkPart; } 
    public void SetCompressedChunkPart(byte[] value) { CompressedChunkPart = value; } 
    
    
}

public class Packet_ServerChunk
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Z;
    public int GetZ() { return Z; } 
    public void SetZ(int value) { Z = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeX;
    public int GetSizeX() { return SizeX; } 
    public void SetSizeX(int value) { SizeX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeY;
    public int GetSizeY() { return SizeY; } 
    public void SetSizeY(int value) { SizeY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeZ;
    public int GetSizeZ() { return SizeZ; } 
    public void SetSizeZ(int value) { SizeZ = value; } 
    
    
}

/// <summary>
/// <para>needed for drawing shadows.</para>
/// <para>sent before any chunks or blocks in the column.</para>
/// </summary>
public class Packet_ServerHeightmapChunk
{
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeX;
    public int GetSizeX() { return SizeX; } 
    public void SetSizeX(int value) { SizeX = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeY;
    public int GetSizeY() { return SizeY; } 
    public void SetSizeY(int value) { SizeY = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     byte[] CompressedHeightmap;
    public byte[] GetCompressedHeightmap() { return CompressedHeightmap; } 
    public void SetCompressedHeightmap(byte[] value) { CompressedHeightmap = value; } 
    
    
}

public class Packet_ServerInventory
{
    
    #if !CITO
     internal
    #endif
     Packet_Inventory Inventory;
    public Packet_Inventory GetInventory() { return Inventory; } 
    public void SetInventory(Packet_Inventory value) { Inventory = value; } 
    
    
}

public class Packet_ServerPlayerStats
{
    
    #if !CITO
     internal
    #endif
     int CurrentHealth;
    public int GetCurrentHealth() { return CurrentHealth; } 
    public void SetCurrentHealth(int value) { CurrentHealth = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MaxHealth;
    public int GetMaxHealth() { return MaxHealth; } 
    public void SetMaxHealth(int value) { MaxHealth = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int CurrentOxygen;
    public int GetCurrentOxygen() { return CurrentOxygen; } 
    public void SetCurrentOxygen(int value) { CurrentOxygen = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MaxOxygen;
    public int GetMaxOxygen() { return MaxOxygen; } 
    public void SetMaxOxygen(int value) { MaxOxygen = value; } 
    
    
}

public class Packet_ServerMonsters
{
    
    #if !CITO
     internal
    #endif
     Packet_ServerMonster[] Monsters;
    public Packet_ServerMonster[] GetMonsters() { return Monsters; } 
    public void SetMonsters(Packet_ServerMonster[] value, int count, int length) { Monsters = value; MonstersCount = count; MonstersLength = length; } 
    
    #if !CITO
     internal
    #endif
     int MonstersCount;
    public int GetMonstersCount() { return MonstersCount; } 
    
    #if !CITO
     internal
    #endif
     int MonstersLength;
    public int GetMonstersLength() { return MonstersLength; } 
    public void MonstersAdd(Packet_ServerMonster value){if(MonstersCount >= MonstersLength)
    {
    Packet_ServerMonster[] Monsters2 = new Packet_ServerMonster[MonstersLength*2];
    MonstersLength = MonstersLength*2;
    for(int i=0;i<MonstersCount;i++)
    {
    Monsters2[i] = Monsters[i];
    }
    Monsters=Monsters2;
    }
    Monsters[MonstersCount] = value;
    MonstersCount++;
    }
    
    
}

public class Packet_ServerMonster
{
    
    #if !CITO
     internal
    #endif
     int Id;
    public int GetId() { return Id; } 
    public void SetId(int value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int MonsterType;
    public int GetMonsterType() { return MonsterType; } 
    public void SetMonsterType(int value) { MonsterType = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_PositionAndOrientation PositionAndOrientation;
    public Packet_PositionAndOrientation GetPositionAndOrientation() { return PositionAndOrientation; } 
    public void SetPositionAndOrientation(Packet_PositionAndOrientation value) { PositionAndOrientation = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Health;
    public int GetHealth() { return Health; } 
    public void SetHealth(int value) { Health = value; } 
    
    
}

public class Packet_ServerSeason
{
    /// <summary>optional int32 Season;</summary>
    
    #if !CITO
     internal
    #endif
     int Hour;
    public int GetHour() { return Hour; } 
    public void SetHour(int value) { Hour = value; } 
    
    
    /// <summary>1-24*4</summary>
    
    #if !CITO
     internal
    #endif
     int DayNightCycleSpeedup;
    public int GetDayNightCycleSpeedup() { return DayNightCycleSpeedup; } 
    public void SetDayNightCycleSpeedup(int value) { DayNightCycleSpeedup = value; } 
    
    
    /// <summary>used for predicting sun speed.</summary>
    
    #if !CITO
     internal
    #endif
     int Moon;
    public int GetMoon() { return Moon; } 
    public void SetMoon(int value) { Moon = value; } 
    
    
}

public class Packet_ServerDialog
{
    
    #if !CITO
     internal
    #endif
     string DialogId;
    public string GetDialogId() { return DialogId; } 
    public void SetDialogId(string value) { DialogId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Dialog Dialog;
    public Packet_Dialog GetDialog() { return Dialog; } 
    public void SetDialog(Packet_Dialog value) { Dialog = value; } 
    
    
}

public class Packet_ServerPing
{
}

public class Packet_ServerPlayerPing
{
    
    #if !CITO
     internal
    #endif
     int ClientId;
    public int GetClientId() { return ClientId; } 
    public void SetClientId(int value) { ClientId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Ping;
    public int GetPing() { return Ping; } 
    public void SetPing(int value) { Ping = value; } 
    
    
}

public class Packet_ServerTranslatedString
{
    
    #if !CITO
     internal
    #endif
     string Lang;
    public string GetLang() { return Lang; } 
    public void SetLang(string value) { Lang = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Id;
    public string GetId() { return Id; } 
    public void SetId(string value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Translation;
    public string GetTranslation() { return Translation; } 
    public void SetTranslation(string value) { Translation = value; } 
    
    
}

public class Packet_Inventory
{
    
    #if !CITO
     internal
    #endif
     Packet_Item MainArmor;
    public Packet_Item GetMainArmor() { return MainArmor; } 
    public void SetMainArmor(Packet_Item value) { MainArmor = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item Boots;
    public Packet_Item GetBoots() { return Boots; } 
    public void SetBoots(Packet_Item value) { Boots = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item Helmet;
    public Packet_Item GetHelmet() { return Helmet; } 
    public void SetHelmet(Packet_Item value) { Helmet = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item Gauntlet;
    public Packet_Item GetGauntlet() { return Gauntlet; } 
    public void SetGauntlet(Packet_Item value) { Gauntlet = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_PositionItem[] Items;
    public Packet_PositionItem[] GetItems() { return Items; } 
    public void SetItems(Packet_PositionItem[] value, int count, int length) { Items = value; ItemsCount = count; ItemsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int ItemsCount;
    public int GetItemsCount() { return ItemsCount; } 
    
    #if !CITO
     internal
    #endif
     int ItemsLength;
    public int GetItemsLength() { return ItemsLength; } 
    public void ItemsAdd(Packet_PositionItem value){if(ItemsCount >= ItemsLength)
    {
    Packet_PositionItem[] Items2 = new Packet_PositionItem[ItemsLength*2];
    ItemsLength = ItemsLength*2;
    for(int i=0;i<ItemsCount;i++)
    {
    Items2[i] = Items[i];
    }
    Items=Items2;
    }
    Items[ItemsCount] = value;
    ItemsCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item DragDropItem;
    public Packet_Item GetDragDropItem() { return DragDropItem; } 
    public void SetDragDropItem(Packet_Item value) { DragDropItem = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item[] RightHand;
    public Packet_Item[] GetRightHand() { return RightHand; } 
    public void SetRightHand(Packet_Item[] value, int count, int length) { RightHand = value; RightHandCount = count; RightHandLength = length; } 
    
    #if !CITO
     internal
    #endif
     int RightHandCount;
    public int GetRightHandCount() { return RightHandCount; } 
    
    #if !CITO
     internal
    #endif
     int RightHandLength;
    public int GetRightHandLength() { return RightHandLength; } 
    public void RightHandAdd(Packet_Item value){if(RightHandCount >= RightHandLength)
    {
    Packet_Item[] RightHand2 = new Packet_Item[RightHandLength*2];
    RightHandLength = RightHandLength*2;
    for(int i=0;i<RightHandCount;i++)
    {
    RightHand2[i] = RightHand[i];
    }
    RightHand=RightHand2;
    }
    RightHand[RightHandCount] = value;
    RightHandCount++;
    }
    
    
}

public class Packet_Item
{
    
    #if !CITO
     internal
    #endif
     int ItemClass;
    public int GetItemClass() { return ItemClass; } 
    public void SetItemClass(int value) { ItemClass = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string ItemId;
    public string GetItemId() { return ItemId; } 
    public void SetItemId(string value) { ItemId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockId;
    public int GetBlockId() { return BlockId; } 
    public void SetBlockId(int value) { BlockId = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int BlockCount;
    public int GetBlockCount() { return BlockCount; } 
    public void SetBlockCount(int value) { BlockCount = value; } 
    
    
}

public class Packet_PositionItem
{
    
    #if !CITO
     internal
    #endif
     string Key_;
    public string GetKey_() { return Key_; } 
    public void SetKey_(string value) { Key_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     Packet_Item Value_;
    public Packet_Item GetValue_() { return Value_; } 
    public void SetValue_(Packet_Item value) { Value_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
}

public class Packet_Dialog
{
    
    #if !CITO
     internal
    #endif
     Packet_Widget[] Widgets;
    public Packet_Widget[] GetWidgets() { return Widgets; } 
    public void SetWidgets(Packet_Widget[] value, int count, int length) { Widgets = value; WidgetsCount = count; WidgetsLength = length; } 
    
    #if !CITO
     internal
    #endif
     int WidgetsCount;
    public int GetWidgetsCount() { return WidgetsCount; } 
    
    #if !CITO
     internal
    #endif
     int WidgetsLength;
    public int GetWidgetsLength() { return WidgetsLength; } 
    public void WidgetsAdd(Packet_Widget value){if(WidgetsCount >= WidgetsLength)
    {
    Packet_Widget[] Widgets2 = new Packet_Widget[WidgetsLength*2];
    WidgetsLength = WidgetsLength*2;
    for(int i=0;i<WidgetsCount;i++)
    {
    Widgets2[i] = Widgets[i];
    }
    Widgets=Widgets2;
    }
    Widgets[WidgetsCount] = value;
    WidgetsCount++;
    }
    
    
    
    #if !CITO
     internal
    #endif
     int Width;
    public int GetWidth() { return Width; } 
    public void SetWidth(int value) { Width = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Height_;
    public int GetHeight_() { return Height_; } 
    public void SetHeight_(int value) { Height_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int IsModal;
    public int GetIsModal() { return IsModal; } 
    public void SetIsModal(int value) { IsModal = value; } 
    
    
}

public class Packet_Widget
{
    
    #if !CITO
     internal
    #endif
     string Id;
    public string GetId() { return Id; } 
    public void SetId(string value) { Id = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Click;
    public int GetClick() { return Click; } 
    public void SetClick(int value) { Click = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int X;
    public int GetX() { return X; } 
    public void SetX(int value) { X = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Y;
    public int GetY() { return Y; } 
    public void SetY(int value) { Y = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Width;
    public int GetWidth() { return Width; } 
    public void SetWidth(int value) { Width = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Height_;
    public int GetHeight_() { return Height_; } 
    public void SetHeight_(int value) { Height_ = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Text;
    public string GetText() { return Text; } 
    public void SetText(string value) { Text = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int ClickKey;
    public int GetClickKey() { return ClickKey; } 
    public void SetClickKey(int value) { ClickKey = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     string Image;
    public string GetImage() { return Image; } 
    public void SetImage(string value) { Image = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Color;
    public int GetColor() { return Color; } 
    public void SetColor(int value) { Color = value; } 
    
    
    /// <summary>white</summary>
    
    #if !CITO
     internal
    #endif
     Packet_DialogFont Font;
    public Packet_DialogFont GetFont() { return Font; } 
    public void SetFont(Packet_DialogFont value) { Font = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int Type;
    public int GetType() { return Type; } 
    public void SetType(int value) { Type = value; } 
    
    
}

public class Packet_DialogFont
{
    
    #if !CITO
     internal
    #endif
     string FamilyName;
    public string GetFamilyName() { return FamilyName; } 
    public void SetFamilyName(string value) { FamilyName = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int SizeFloat;
    public int GetSizeFloat() { return SizeFloat; } 
    public void SetSizeFloat(int value) { SizeFloat = value; } 
    
    
    
    #if !CITO
     internal
    #endif
     int FontStyle;
    public int GetFontStyle() { return FontStyle; } 
    public void SetFontStyle(int value) { FontStyle = value; } 
    
    
}

public class Packet_ClientIdEnum
{
    public const int PlayerIdentification = 0;
    public const int PingReply = 1;
    public const int SetBlock = 5;
    public const int FillArea = 510;
    public const int PositionandOrientation = 8;
    public const int Craft = 9;
    public const int Message = 13;
    public const int DialogClick = 14;
    public const int RequestBlob = 50;
    public const int InventoryAction = 51;
    public const int Health = 52;
    public const int MonsterHit = 53;
    public const int Shot = 54;
    public const int SpecialKey = 55;
    public const int ActiveMaterialSlot = 56;
    public const int Leave = 57;
    public const int Reload = 58;
    public const int Oxygen = 59;
    public const int Death = 60;
    public const int EntityInteraction = 61;
    public const int ServerQuery = 64;
    public const int GameResolution = 10;
    public const int ExtendedPacketCommand = 100;
}


public class Packet_InventoryActionTypeEnum
{
    public const int Click = 0;
    public const int WearItem = 1;
    public const int MoveToInventory = 2;
}


public class Packet_InventoryPositionTypeEnum
{
    public const int MainArea = 0;
    public const int Ground = 1;
    public const int MaterialSelector = 2;
    public const int WearPlace = 3;
}


public class Packet_BlockSetModeEnum
{
    public const int Destroy = 0;
    public const int Create = 1;
    public const int Use = 2;
    /// <summary>open doors, use crafting table, etc.</summary>
    public const int UseWithTool = 3;
}


public class Packet_LeaveReasonEnum
{
    public const int Leave = 0;
    public const int Crash = 1;
}


public class Packet_SpecialKeyEnum
{
    public const int Respawn = 0;
    public const int SetSpawn = 1;
    public const int TabPlayerList = 2;
    public const int SelectTeam = 3;
}


public class Packet_DeathReasonEnum
{
    public const int FallDamage = 0;
    public const int BlockDamage = 1;
    public const int Drowning = 2;
    public const int Explosion = 3;
}


public class Packet_EntityInteractionTypeEnum
{
    public const int Use = 0;
    public const int Hit = 1;
}


public class Packet_DrawTypeEnum
{
    public const int Empty = 0;
    public const int Solid = 1;
    public const int Transparent = 2;
    public const int Fluid = 3;
    public const int Torch = 4;
    public const int Plant = 5;
    public const int OpenDoorLeft = 6;
    public const int OpenDoorRight = 7;
    public const int ClosedDoor = 8;
    public const int Ladder = 9;
    public const int Fence = 10;
    public const int HalfHeight = 11;
    public const int Flat = 12;
    public const int Cactus = 13;
}


public class Packet_WalkableTypeEnum
{
    public const int Empty = 0;
    public const int Fluid = 1;
    public const int Solid = 2;
}


public class Packet_PistolTypeEnum
{
    public const int Normal = 0;
    public const int Grenade = 1;
}


public class Packet_ServerIdEnum
{
    public const int ServerIdentification = 0;
    public const int Ping = 1;
    public const int PlayerPing = 111;
    public const int LevelInitialize = 2;
    public const int LevelDataChunk = 3;
    public const int LevelFinalize = 4;
    public const int SetBlock = 6;
    public const int FillArea = 61;
    public const int FillAreaLimit = 62;
    public const int Message = 13;
    public const int DisconnectPlayer = 14;
    public const int Chunk_ = 15;
    public const int FiniteInventory = 16;
    public const int Season = 17;
    public const int BlobInitialize = 18;
    public const int BlobPart = 19;
    public const int BlobFinalize = 20;
    public const int HeightmapChunk = 21;
    public const int Sound = 22;
    public const int PlayerStats = 23;
    public const int Monster = 24;
    public const int ActiveMonsters = 25;
    public const int PlayerSpawnPosition = 26;
    public const int BlockTypes = 27;
    public const int SunLevels = 28;
    public const int LightLevels = 29;
    public const int CraftingRecipes = 30;
    public const int RemoveMonsters = 50;
    public const int Freemove = 51;
    public const int Dialog = 52;
    public const int Follow = 53;
    public const int Bullet = 54;
    public const int Ammo = 55;
    public const int BlockType = 56;
    public const int ChunkPart = 57;
    public const int Explosion = 58;
    public const int Projectile = 59;
    public const int Translation = 60;
    public const int QueryAnswer = 64;
    public const int ServerRedirect = 65;
    public const int EntitySpawn = 66;
    public const int EntityPosition = 67;
    public const int EntityDespawn = 68;
    public const int ExtendedPacketCommand = 100;
    public const int ExtendedPacketTick = 101;
}


public class Packet_ItemClassEnum
{
    public const int Block = 0;
    public const int Weapon = 1;
    public const int MainArmor = 2;
    public const int Boots = 3;
    public const int Helmet = 4;
    public const int Gauntlet = 5;
    public const int Shield = 6;
    public const int Other = 7;
}


public class Packet_WidgetTypeEnum
{
    public const int Image = 0;
    public const int Text = 1;
    public const int TextBox = 2;
}


public class Packet_DialogFontStyleEnum
{
    public const int Regular = 0;
    public const int Bold = 1;
    public const int Italic = 2;
    public const int Underline = 4;
    public const int Strikeout = 8;
}


